@* This view is responsible for rendering filters *@
@using SmithsonianSearch.Helpers
@using SmithsonianSearch.Models
@model SearchModel

@{
    var cssClass_1_5 = "first-5-options";
    var cssClass_6_20 = "from-6-to-20-options";
    var cssClass_21_40 = "from-21-to-40-options";

    // Expected filters categories: [name in lower case] - [path to title image]. Add a new entry in case of a new category.
    var filterImages = new Dictionary<string, string>()
                            {
                                { "artist", "~/img/label_artist_.png" },
                                { "country", "~/img/label_country_.png" },
                                { "culture", "~/img/label_culture_.png" },
                                { "decade", "~/img/label_decade_.png" },
                                { "format", "~/img/label_format_.png" },
                                { "genre", "~/img/label_genre_.png" },
                                { "gradelevel", "~/img/label_gradelevel_.png" },
                                { "instrument", "~/img/label_instrument_.png" },
                                { "record label", "~/img/label_label_.png" },
                                { "language", "~/img/label_language_.png" },
                                { "region", "~/img/label_region_.png" },
                                { "share", "~/img/label_share_.png" },
                                { "sub-region", "~/img/label_subregion_.png" }
                            };
}


@if (!string.IsNullOrEmpty(Model.Query))
{


    <div class="filter-outside"></div>
    <div class="highlight-bar">
        <div class="container">
            <div class="row">
                <div class="col-sm-12">
                    <div class="filter-by-title">Filter By		</div>
                    @*<div class="filter-by-title clear-all-button">Clear All		</div>*@
                </div>
            </div>
            <ul class="row dropdown-wrapper">
                <!-- inside so 100% width takes bootstrap padding into account-->
                @if (Model != null && Model.FiltersModel != null && Model.FiltersModel.FiltersOptions != null && Model.FiltersModel.FiltersOptions.Count > 0)
                {
                    if (!string.IsNullOrEmpty(Model.Query))
                    {
                        int index = 0;
                        foreach (var filter in Model.FiltersModel.FiltersOptions)
                        {
                            //if (filter.Value.Any())
                            //Once new site launches replace line below with line above and remove ContentType from GSA
                            if (!filter.Key.Equals(Model.FiltersModel.ContentTypeParamName.ToLowerInvariant(), StringComparison.OrdinalIgnoreCase) && filter.Value.Any())
                            {
                                var optionsCount = filter.Value.Count();
                                var seeLessClass = optionsCount > 20 ? cssClass_21_40 : optionsCount > 5 ? cssClass_6_20 : cssClass_1_5;

                                // add more button in fifth column of first row, but only if more results exist
                                if (index == 5 && Model.FiltersModel.FiltersOptions.Count > 6)
                                {
                                    <li class="col-sm-2 hidden-xs">
                                        <label for="" class="filter-label">&nbsp;</label>
                                        <div class="filter-button filter-more">
                                            More
                                        </div>
                                    </li>
                                }

                                <li class="dropdown filter-dropdown col-sm-2">
                                    <label for="@filter.Key" class="filter-label">@filter.Key</label>
                                    <select id="ddl" class="filter-select" name="@filter.Key" runat="server" onchange="javascript:document.location.href = this.value;">
                                        <option>Select one @index @Model.FiltersModel.FiltersOptions.Count</option>
                                        @foreach (var option in filter.Value.Take(5))
                                        {

                                            @RenderFilterOption(filter.Key, option, cssClass_1_5, "")

                                        }
                                    </select>
                                </li>

                                // increase index for showing/hiding more button
                                index++;

                            }
                        }
                    }
                }
            </ul>



                </div>
            </div>
       }

        @helper RenderFilterOption(string filterName, SmithsonianSearch.Models.Filter option, string cssClass, string styleAttrValue)
        {
        if (option != null && !string.IsNullOrEmpty(option.Title) && !option.Title.Equals("n/a"))
        {
            bool isApplied = Model.FiltersModel.IsFilterApplied(filterName, option.Title);
            string checkedAttr = isApplied ? "selected" : string.Empty;

            <option @checkedAttr value="@Model.GetFilterUrl(filterName, option.Title, !isApplied)">@option.Title.Truncate(55)</option>

            @*<li class="@cssClass" style="@styleAttrValue">
                    <label for="filterValue" title="@option" class="clearfix">
                        <input type="checkbox" name="filter-value" @checkedAttr class="filter" value="@Model.GetFilterUrl(filterName, option.Title, !isApplied)" />
                        <span title="@option">@option.Title.Truncate(55) (@option.ResultsCount.ToString("n0"))</span>
                    </label>
                </li>*@
        }
    }

                    @helper RenderFilterTitle(string filter, Dictionary<string, string> filterImages)
                    {
if (filterImages.ContainsKey(filter.ToLowerInvariant()))
{
        <img src="@Url.Content(filterImages[filter.ToLowerInvariant()])" alt="@filter" />
}
else
{
        @filter
}
}
